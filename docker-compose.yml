version: "3.4"

services:

  redis:
    image: redis:4.0.7
    ports:
      - "6379:6379"
    container_name: redis
    hostname: redis
    restart: always
    expose:
      - "6379"

  worker:
    build:
      context: .
      dockerfile: Dockerfile-dev
    restart: always
    container_name: worker
    command: celery -A geartracker worker -l info
    depends_on:
      - redis
    hostname: worker
    environment:
      C_FORCE_ROOT: "true"
    volumes:
      - .:/code
    deploy:
      replicas: 2
      restart_policy:
        condition: always
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
        reservations:
          cpus: '0.25'
          memory: 20M

  web:
    build:
      context: .
      dockerfile: Dockerfile-dev
    restart: always
    container_name: web
    hostname: web
#     command: python /code/manage.py runserver 0.0.0.0:5000
    command: bash -c "python manage.py collectstatic --no-input && python manage.py makemigrations && python manage.py migrate && gunicorn --workers=3 settings.wsgi -b 0.0.0.0:5000"
    volumes:
      - .:/code
    environment:
      PORT: "5000"
    ports:
      - "5000:5000"
    expose:
      - "5000"

  nginx:
    restart: always
    build: ./nginx/
    volumes:
      - ./nginx/:/etc/nginx/conf.d
      - ./logs/:/code/logs
      - ./media:/code/media
      - ./geartracker/static:/code/geartracker/static
    ports:
      - "80:80"
    links:
        - web

